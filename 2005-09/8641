X-From-Line: git-owner@vger.kernel.org  Thu Sep 15 16:42:00 2005
Return-Path: <git-owner@vger.kernel.org>
X-Original-To: tkil@scrye.com
Delivered-To: tkil@scrye.com
Received: from vger.kernel.org (vger.kernel.org [209.132.176.167])
	by mail.scrye.com (Postfix) with ESMTP id A566629509C
	for <tkil@scrye.com>; Thu, 15 Sep 2005 16:42:00 -0600 (MDT)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1161034AbVIOWka (ORCPT <rfc822;tkil@scrye.com>);
	Thu, 15 Sep 2005 18:40:30 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1161036AbVIOWka
	(ORCPT <rfc822;git-outgoing>); Thu, 15 Sep 2005 18:40:30 -0400
Received: from www.jdl.com ([66.118.10.122]:61577 "EHLO jdl.com")
	by vger.kernel.org with ESMTP id S1161034AbVIOWk3 (ORCPT
	<rfc822;git@vger.kernel.org>); Thu, 15 Sep 2005 18:40:29 -0400
Received: from jdl (helo=jdl.com)
	by jdl.com with local-esmtp (Exim 4.44)
	id 1EG2Or-0005E2-Pw
	for git@vger.kernel.org; Thu, 15 Sep 2005 17:40:14 -0500
From:	jdl@freescale.com
To:	git@vger.kernel.org
Subject: PATCH Documentation/git-rev-list.txt typo fix
Date:	Thu, 15 Sep 2005 17:40:13 -0500
X-Gnus-Mail-Source: directory:~/.incoming-mail
Message-Id: <E1EG2Or-0005E2-Pw@jdl.com>
Sender:	git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List:	git@vger.kernel.org
X-Spam-Checker-Version: SpamAssassin 3.0.4 (2005-06-05) on brand.scrye.com
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00,NO_REAL_NAME 
	autolearn=no version=3.0.4
Lines: 27
Xref: brand.scrye.com linux.git:8641

I'm not positive what the doc conventions are, but I think
something like this patch fixes the "superscript" problem
on the git-rev-list doc page.

Signed-off-by: Jon Loeliger <jdl@freescale.com>
---


diff --git a/Documentation/git-rev-list.txt b/Documentation/git-rev-list.txt
--- a/Documentation/git-rev-list.txt
+++ b/Documentation/git-rev-list.txt
@@ -32,8 +32,8 @@ I have the commit object 'bar', but not

 The *--bisect* flag limits output to the one commit object which is
 roughly halfway between the included and excluded commits. Thus,
-if "git-rev-list --bisect foo ^bar ^baz" outputs 'midpoint', the output
-of "git-rev-list foo ^midpoint" and "git-rev-list midpoint ^bar ^baz"
+if 'git-rev-list --bisect foo ^bar ^baz' outputs 'midpoint', the output
+of 'git-rev-list foo ^midpoint' and 'git-rev-list midpoint ^bar ^baz'
 would be of roughly the same length. Finding the change which introduces
 a regression is thus reduced to a binary search: repeatedly generate and
 test new 'midpoint's until the commit chain is of length one.
-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

