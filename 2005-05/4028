X-From-Line: git-owner@vger.kernel.org  Fri May 27 10:22:40 2005
Return-Path: <git-owner@vger.kernel.org>
X-Original-To: tkil@scrye.com
Delivered-To: tkil@scrye.com
Received: from vger.kernel.org (vger.kernel.org [12.107.209.244])
	by mail.scrye.com (Postfix) with ESMTP id 4ED116D36
	for <tkil@scrye.com>; Fri, 27 May 2005 10:22:40 -0600 (MDT)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S261863AbVE0QWW (ORCPT <rfc822;tkil@scrye.com>);
	Fri, 27 May 2005 12:22:22 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S262482AbVE0QWW
	(ORCPT <rfc822;git-outgoing>); Fri, 27 May 2005 12:22:22 -0400
Received: from av1.karneval.cz ([81.27.192.107]:38004 "EHLO av1.karneval.cz")
	by vger.kernel.org with ESMTP id S261863AbVE0QWE (ORCPT
	<rfc822;git@vger.kernel.org>); Fri, 27 May 2005 12:22:04 -0400
Received: from localhost (localhost [127.0.0.1])
	by av1.karneval.cz (Postfix) with ESMTP id D6B6470BA7;
	Fri, 27 May 2005 18:48:39 +0200 (CEST)
Received: from av1.karneval.cz ([127.0.0.1])
 by localhost (av1 [127.0.0.1]) (amavisd-new, port 10024) with ESMTP
 id 23487-05; Fri, 27 May 2005 18:48:39 +0200 (CEST)
Received: from mail.karneval.cz (mx1.karneval.cz [81.27.192.53])
	by av1.karneval.cz (Postfix) with ESMTP id 2EA4C70BA6;
	Fri, 27 May 2005 18:48:39 +0200 (CEST)
Received: from [10.5.150.25] (unknown [10.5.150.25])
	by mail.karneval.cz (Postfix) with ESMTP id 06B304FC62B;
	Fri, 27 May 2005 18:21:55 +0200 (CEST)
From: Pavel Pisa <pisa@cmp.felk.cvut.cz>
To: Petr Baudis <pasky@ucw.cz>, git@vger.kernel.org
Subject: GIT and COGITO individual scripts hidding from PATH
Date:	Fri, 27 May 2005 18:24:04 +0200
User-Agent: KMail/1.8
References: <200504132249.16848.pisa@cmp.felk.cvut.cz> <200505241235.02597.pisa@cmp.felk.cvut.cz> <20050524111333.GA11223@pasky.ji.cz>
In-Reply-To: <20050524111333.GA11223@pasky.ji.cz>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
X-Gnus-Mail-Source: directory:~/.incoming-mail
Message-Id: <200505271824.05105.pisa@cmp.felk.cvut.cz>
X-Virus-Scanned: by karneval.cz
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List:	git@vger.kernel.org
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on brand.scrye.com
X-Spam-Level: 
X-Spam-Status: No, score=-3.4 required=5.0 tests=AWL,BAYES_00 autolearn=ham 
	version=3.0.3
Lines: 173
Xref: brand.scrye.com linux.git:4028

Hello All,

I prefer to have as small number of executables in /usr/bin
and /user/local/bin as possible. I have tried to push original
Peter's git script to this direction for my strange personal taste.
COGITO has taken different direction than. I have hidden cogito and git
under wrapper to make me happy again. I thing that it is against good
opensource habits to keep changes secret even if I do not expect
interrest in this version. But may it be, that it can make
happy somebody with same taste as I have.

The "cgt" is wrapper for all cogito programs. If cogito is
build and installed to any prefix directory (/opt/git-cogito in my case)
and script is copied to bin subdirectory (/opt/git-cogito/bin),
then only single symbolic link from some searchable directory on PATH
is enough to call all cogito commands
  cgt pull
  cgt update
so usage is more convenient for my fingers learned to type cvs up, etc.
I think, that addition of intelligent bash completion could be done easier
if number of the first level commands to cover is smaller.

Best wishes

        Pavel Pisa

"cgt" script
--------------------------------------------------------------------------------
#!/usr/bin/env bash
#
# The GIT scripted toolkit.
# Copyright (c) Petr Baudis, 2005
#
# Script to automatically wrap individual GIT commands under one script
# for those, who prefer only one or two links in /usr/local/bin
# This script added by Pavel Pisa <pisa@cmp.felk.cvut.cz>
#
# This command mostly only multiplexes to the individual scripts based
# on the first argument.

error () {
	echo cgt: $@ >&2
}
die () {
	error $@
	exit 1
}

if [ -z "$GIT_TOOLS_DIR" ] ; then
	GIT_MUXBINARY_DIR="$(dirname "$0")"
	if [ -h "$0" ]; then
		#GIT_TOOLS_DIR="$(ls -l "$0" | sed 's/^.*-> *\(.*\) *$/\1/')"
		GIT_TOOLS_DIR="$(readlink -f -n $0)"
	        GIT_TOOLS_DIR="$(dirname "$GIT_TOOLS_DIR")"
		GIT_TOOLS_DIR="$(cd "$GIT_MUXBINARY_DIR" ; cd "$GIT_TOOLS_DIR" ; pwd )"
	else
		GIT_TOOLS_DIR="$(cd "$GIT_MUXBINARY_DIR" ; pwd )"
	fi

	if [ -z "$(echo :$PATH: | sed -n -e 's#:'"$GIT_TOOLS_DIR"':#yes#p' )" ] ; 
then
		export PATH="$GIT_TOOLS_DIR:$PATH"
	fi

	export GIT_TOOLS_DIR
fi

#echo =$GIT_TOOLS_DIR
#echo PATH=$PATH
#echo CWD=$(pwd)
#exit 

help () {
	echo "cgt recognizes next commands:" >&2 
	(cd $GIT_TOOLS_DIR ; ls cg-* ) | sed -n -e 's/\<cg-\([^ ]*\)\>/\1/pg' >&2 
}


cmd=$1; shift

if [ ! "$cmd" ]; then
	error "missing command"
	help
	exit 1
fi

cgt_cmd_exe="${GIT_TOOLS_DIR}/cg-$cmd"

if [ ! -e "$cgt_cmd_exe" ]; then
	error "unrecognized command ${cmd}"
	help
	exit 1
fi

"$cgt_cmd_exe" "$@"
--------------------------------------------------------------------------------

"git" script
--------------------------------------------------------------------------------
#!/usr/bin/env bash
#
# The GIT scripted toolkit.
# Copyright (c) Petr Baudis, 2005
#
# Script to automatically wrap individual GIT commands under one script
# for those, who prefer only one or two links in /usr/local/bin
# This script added by Pavel Pisa <pisa@cmp.felk.cvut.cz>
#
# This command mostly only multiplexes to the individual scripts based
# on the first argument.

error () {
	echo git: $@ >&2
}
die () {
	error $@
	exit 1
}

if [ -z "$GIT_TOOLS_DIR" ] ; then
	GIT_MUXBINARY_DIR="$(dirname "$0")"
	if [ -h "$0" ]; then
		#GIT_TOOLS_DIR="$(ls -l "$0" | sed 's/^.*-> *\(.*\) *$/\1/')"
		GIT_TOOLS_DIR="$(readlink -f -n $0)"
	        GIT_TOOLS_DIR="$(dirname "$GIT_TOOLS_DIR")"
		GIT_TOOLS_DIR="$(cd "$GIT_MUXBINARY_DIR" ; cd "$GIT_TOOLS_DIR" ; pwd )"
	else
		GIT_TOOLS_DIR="$(cd "$GIT_MUXBINARY_DIR" ; pwd )"
	fi

	if [ -z "$(echo :$PATH: | sed -n -e 's#:'"$GIT_TOOLS_DIR"':#yes#p' )" ] ; 
then
		export PATH="$GIT_TOOLS_DIR:$PATH"
	fi

	export GIT_TOOLS_DIR
fi

#echo =$GIT_TOOLS_DIR
#echo PATH=$PATH
#echo CWD=$(pwd)
#exit 

help () {
	echo "git recognizes next commands:" >&2 
	(cd $GIT_TOOLS_DIR ; ls git-* ) | sed -n -e 's/\<git-\([^ ]*\)\>/\1/pg' >&2 
}


cmd=$1; shift

if [ ! "$cmd" ]; then
	error "missing command"
	help
	exit 1
fi

git_cmd_exe="${GIT_TOOLS_DIR}/git-$cmd"

if [ ! -e "$git_cmd_exe" ]; then
	error "unrecognized command ${cmd}"
	help
	exit 1
fi

"$git_cmd_exe" "$@"
--------------------------------------------------------------------------------

-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

