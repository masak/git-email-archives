X-From-Line: git-owner@vger.kernel.org  Sun Jun  5 10:39:10 2005
Return-Path: <git-owner@vger.kernel.org>
X-Original-To: tkil@scrye.com
Delivered-To: tkil@scrye.com
Received: from vger.kernel.org (vger.kernel.org [12.107.209.244])
	by mail.scrye.com (Postfix) with ESMTP id 4AA291529F2
	for <tkil@scrye.com>; Sun,  5 Jun 2005 10:39:10 -0600 (MDT)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S261594AbVFEQi5 (ORCPT <rfc822;tkil@scrye.com>);
	Sun, 5 Jun 2005 12:38:57 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S261595AbVFEQi5
	(ORCPT <rfc822;git-outgoing>); Sun, 5 Jun 2005 12:38:57 -0400
Received: from c-67-163-246-116.hsd1.pa.comcast.net ([67.163.246.116]:38342
	"EHLO port.evillabs.net") by vger.kernel.org with ESMTP
	id S261594AbVFEQiz (ORCPT <rfc822;git@vger.kernel.org>);
	Sun, 5 Jun 2005 12:38:55 -0400
Received: by port.evillabs.net (Postfix, from userid 500)
	id AD65740C5A; Sun,  5 Jun 2005 12:38:52 -0400 (EDT)
Subject: Re: [PATCH] pull: gracefully recover from delta retrieval failure.
From: Jason McMullan <jason.mcmullan@timesys.com>
To: Junio C Hamano <junkio@cox.net>
Cc: Linus Torvalds <torvalds@osdl.org>, git@vger.kernel.org
In-Reply-To: <7v4qcde3j9.fsf@assigned-by-dhcp.cox.net>
References: <7v4qcde3j9.fsf@assigned-by-dhcp.cox.net>
Content-Type: text/plain
Content-Transfer-Encoding: 7bit
Date:	Sun, 05 Jun 2005 12:38:52 -0400
X-Gnus-Mail-Source: directory:~/.incoming-mail
Message-Id: <1117989532.10424.7.camel@port.evillabs.net>
Mime-Version: 1.0
X-Mailer: Evolution 2.0.4-3mdk 
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List:	git@vger.kernel.org
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on brand.scrye.com
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham 
	version=3.0.3
Lines: 33
Xref: brand.scrye.com linux.git:4558

On Sat, 2005-06-04 at 23:11 -0700, Junio C Hamano wrote:
> This addresses a concern raised by Jason McMullan in the mailing
> list discussion.  After retrieving and storing a potentially
> deltified object, pull logic tries to check and fulfil its delta
> dependency.  When the pull procedure is killed at this point,
> however, there was no easy way to recover by re-running pull,
> since next run would have found that we already have that
> deltified object and happily reported success, without really
> checking its delta dependency is satisfied.

I still think it would be much better if you didn't place unverified
objects in the database in the first place. You've taken care of delta
object recovery, yes, but what about unsatisfied tree objects? Or commit
objects? Does your algorithm require full depth scanning of the
entire repository that is descended from the commit head?

I much prefer to always leave the database in a consistent state, that
way you only have to do O(number-of-retrieved-objects) verifications,
not O(number-of-commit-tree-ancestors) verifications.

Or am I misunderstanding your technique here? 

Sorry about being a pest, but this worries me. Please assuage my fears.

(Or, if you'd like, I can rework pull.c to use the
 verification-before-store technique I used in my git-daemon patch, so
 all the *-pull mechanisms will be 'safe')

-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

