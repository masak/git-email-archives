X-From-Line: git-owner@vger.kernel.org  Sat Jul  2 20:51:31 2005
Return-Path: <git-owner@vger.kernel.org>
X-Original-To: tkil@scrye.com
Delivered-To: tkil@scrye.com
Received: from vger.kernel.org (vger.kernel.org [12.107.209.244])
	by mail.scrye.com (Postfix) with ESMTP id 1194C1049D8
	for <tkil@scrye.com>; Sat,  2 Jul 2005 20:51:31 -0600 (MDT)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S261346AbVGCCvS (ORCPT <rfc822;tkil@scrye.com>);
	Sat, 2 Jul 2005 22:51:18 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S261349AbVGCCvS
	(ORCPT <rfc822;git-outgoing>); Sat, 2 Jul 2005 22:51:18 -0400
Received: from science.horizon.com ([192.35.100.1]:8519 "HELO
	science.horizon.com") by vger.kernel.org with SMTP id S261346AbVGCCvM
	(ORCPT <rfc822;git@vger.kernel.org>); Sat, 2 Jul 2005 22:51:12 -0400
Received: (qmail 18759 invoked by uid 1000); 3 Jul 2005 02:51:12 -0000
Date:	3 Jul 2005 02:51:12 -0000
X-Gnus-Mail-Source: directory:~/.incoming-mail
Message-ID: <20050703025112.18758.qmail@science.horizon.com>
From: linux@horizon.com
To: git@vger.kernel.org, torvalds@osdl.org
Subject: Re: kernel.org and GIT tree rebuilding
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List:	git@vger.kernel.org
X-Spam-Checker-Version: SpamAssassin 3.0.4 (2005-06-05) on brand.scrye.com
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=AWL,BAYES_00,NO_REAL_NAME 
	autolearn=no version=3.0.4
Lines: 53
Xref: brand.scrye.com linux.git:5569

> 	unsigned long size;
> 	unsigned char c;
> 
> 	c = *pack++;
> 	size = c & 15;
> 	type = (c >> 4) & 7;
> 	while (c & 0x80) {
> 		c = *pack++;
> 		size = (size << 7) + (c & 0x7f);
> 	}
> 
> or something. That's even denser.

If you're going for density, you missed something.  Try:

 	c = *pack++;
 	size = c & 15;
 	type = (c >> 4) & 7;
 	while (c & 0x80) {
 		c = *pack++;
 		size = (size << 7) + (c & 0x7f) + 16;
 	}

Encoding is most easily done in little-endian order, such as:

static unsigned
encode(unsigned char *p, unsigned long x)
{
        unsigned char *q = p;
        unsigned char buf[5];
        unsigned char *b = buf;

        while (x > 15) {
                assert(b < buf+5);
                x -= 16;
                *b++ = x & 0x7f;
                x >>= 7;
        }
        *b = x;

        while (b != buf)
                *q++ = *b-- | 0x80;
        *q++ = *b;
        return (unsigned)(q - p);
}

(You'll probably want to rewrite the above, but it's abandoned to the
public domain in any case.  Go nuts.)
-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

