X-From-Line: git-owner@vger.kernel.org  Thu Oct 20 14:19:25 2005
Return-Path: <git-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.1.0 (2005-09-13) on brand.scrye.com
X-Spam-Level: 
X-Spam-Status: No, score=-2.4 required=5.0 tests=AWL,BAYES_00 autolearn=ham 
	version=3.1.0
X-Original-To: tkil@scrye.com
Delivered-To: tkil@scrye.com
Received: from vger.kernel.org (vger.kernel.org [209.132.176.167])
	by mail.scrye.com (Postfix) with ESMTP id 647F115F93F
	for <tkil@scrye.com>; Thu, 20 Oct 2005 14:19:25 -0600 (MDT)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S932522AbVJTUTS (ORCPT <rfc822;tkil@scrye.com>);
	Thu, 20 Oct 2005 16:19:18 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S932523AbVJTUTS
	(ORCPT <rfc822;git-outgoing>); Thu, 20 Oct 2005 16:19:18 -0400
Received: from qproxy.gmail.com ([72.14.204.193]:31402 "EHLO qproxy.gmail.com")
	by vger.kernel.org with ESMTP id S932522AbVJTUTR convert rfc822-to-8bit
	(ORCPT <rfc822;git@vger.kernel.org>);
	Thu, 20 Oct 2005 16:19:17 -0400
Received: by qproxy.gmail.com with SMTP id v40so402046qbe
        for <git@vger.kernel.org>; Thu, 20 Oct 2005 13:19:15 -0700 (PDT)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
        s=beta; d=gmail.com;
        h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=RVOD92ACwbsdamuoaYyFBJyvZhqgBeGmvKBlm60ltkqRfO9VvFZ4vCM1Jg3H+PQNfjsOHzPatOOuwkh5NiVCufUGsz+OkH6lbjWJLWIJ5yfyIpzvTBgeJmCAzDAiW/sSsm0eijFF+ffrx5eWhIWEgmHZE14ypwF5aDfL4KQsdRs=
Received: by 10.65.192.13 with SMTP id u13mr1841847qbp;
        Thu, 20 Oct 2005 13:19:15 -0700 (PDT)
Received: by 10.65.22.3 with HTTP; Thu, 20 Oct 2005 13:19:15 -0700 (PDT)
X-Gnus-Mail-Source: directory:~/.incoming-mail
Message-ID: <4dd15d180510201319k6beeb1f3j89eae34322d12c90@mail.gmail.com>
Date:	Thu, 20 Oct 2005 16:19:15 -0400
From:	David Ho <davidkwho@gmail.com>
To:	git@vger.kernel.org
Subject: Re: git-filehistory (first cut at detecting renames)
In-Reply-To: <4dd15d180510201251p57bea756s18b2e77d4be4ec35@mail.gmail.com>
MIME-Version: 1.0
Content-Type:	text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7BIT
Content-Disposition: inline
References: <4dd15d180510201251p57bea756s18b2e77d4be4ec35@mail.gmail.com>
Sender:	git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List:	git@vger.kernel.org
Lines: 96
Xref: brand.scrye.com linux.git:10369

Actually, just tried it on the git repository.  It is very slow. 
Maybe because I'm doing a complete diff-tree on each commit.  Mmm...
maybe there is a better way to detect renames  when walking up the
file history.

David

On 10/20/05, David Ho <davidkwho@gmail.com> wrote:
> Hi all,
>
> This is my stupid perl script to detect renames all the way to it's
> origin.  This is my first attempt at writing a perl script so it looks
> a bit awful.  It's not perfect, if a file is renamed, the entire
> commit is dumped out.  Maybe if git-diff-tree -M <pathname> does post
> processing to output changes relevant to <pathname> then it will work
> quite well.
>
> David
>
> [davidho@penguin git-tutorial]$ cat git-filehistory.perl
> #!/usr/bin/perl
>
> use warnings;
> use strict;
>
> sub usage($);
>
> # Sanity checks:
> my $GIT_DIR = $ENV{'GIT_DIR'} || ".git";
>
> unless ( -d $GIT_DIR && -d $GIT_DIR . "/objects" &&
>         -d $GIT_DIR . "/objects/" && -d $GIT_DIR . "/refs") {
>         usage("Git repository not found.");
> }
>
> usage("") if scalar @ARGV != 1;
>
> my ($file) = @ARGV;
>
> unless (-f $file) {
>         usage("git filehistory: '$file' does not exist");
> }
>
> open(F,"-|","git-rev-parse",,"--default","HEAD","--revs-only",$file);
> my $git_rev_args = <F>;
> chomp ($git_rev_args);
> close (F);
>
> open(F,"-|","git-rev-list", $git_rev_args);
> my @commits = <F>;
> close (F);
>
> my $nextname = $file;
> for (my $i=0; $i < scalar @commits; $i++)
> {
>         my $commit = $commits[$i];
>         chomp ($commit);
>
>         open(F,"-|","git-diff-tree","-r","-M", $commit)
>                 or die "Failed to open pipe from git-diff-tree: " . $!;
>         my @lines = grep /R\d{3}.+$nextname/, <F>;
>         close(F);
>         if (scalar @lines >=1) {
>                 #The file is renamed!
>                 my $rc = system
> ("git-diff-tree","-r","-M","-p","--pretty=medium",$commit);
>                 die "git-diff-tree failed" if $rc;
>                 print "\n";
>                 if ($lines[0] =~ /R\d{3}\t(.+)\t(.+)/) {
>                         $nextname = $1;
>                 }
>         }
>         else {
>                 #Not renamed
>                 my $rc = system
> ("git-diff-tree","-r","-m","-p","--pretty=medium",$commit, $nextname);
>                 die "git-diff-tree failed" if $rc;
>                 print "\n";
>         }
> }
>
> sub usage($) {
>         my $s = shift;
>         print $s, "\n" if (length $s != 0);
>         print <<EOT;
> $0 <file>
> This script traces renames to find the origin of the file
> EOT
>         exit(1);
> }
>
-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

