X-From-Line: git-owner@vger.kernel.org  Thu Nov 24 02:33:31 2005
Return-Path: <git-owner@vger.kernel.org>
X-Spam-Checker-Version: SpamAssassin 3.1.0 (2005-09-13) on brand.scrye.com
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00 autolearn=ham 
	version=3.1.0
X-Original-To: tkil@scrye.com
Delivered-To: tkil@scrye.com
Received: from vger.kernel.org (vger.kernel.org [209.132.176.167])
	by mail.scrye.com (Postfix) with ESMTP id 552561EA9A7
	for <tkil@scrye.com>; Thu, 24 Nov 2005 02:33:31 -0700 (MST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S1751327AbVKXJdY (ORCPT <rfc822;tkil@scrye.com>);
	Thu, 24 Nov 2005 04:33:24 -0500
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S1751341AbVKXJdY
	(ORCPT <rfc822;git-outgoing>); Thu, 24 Nov 2005 04:33:24 -0500
Received: from hand.yhbt.net ([66.150.188.102]:30954 "EHLO mail.yhbt.net")
	by vger.kernel.org with ESMTP id S1751327AbVKXJdX (ORCPT
	<rfc822;git@vger.kernel.org>); Thu, 24 Nov 2005 04:33:23 -0500
Received: by mail.yhbt.net (Postfix, from userid 500)
	id DA1EF2DC033; Thu, 24 Nov 2005 01:33:22 -0800 (PST)
Date:	Thu, 24 Nov 2005 01:33:22 -0800
From:	Eric Wong <normalperson@yhbt.net>
To:	git list <git@vger.kernel.org>
Subject: simple git repository browser with vim
X-Gnus-Mail-Source: directory:~/.incoming-mail
Message-ID: <20051124093322.GA3899@mail.yhbt.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.9i
Sender:	git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List:	git@vger.kernel.org
Lines: 73
Xref: brand.scrye.com linux.git:12690

Here's a really quick and easy way to browse git repositories for vim
users.  Hopefully somebody else finds this useful, I know I do.

The idea is just to open a temporary file with git sha1sums (say git-log
output) in vim, move your cursor over any one of the object sha1sums,
and then hit ,G (or any shortcut of your choice) in normal mode to
show what one of those was.

It relies on a simple shell script I wrote called 'git-show' that picks
a reasonable way to display each of the blob, tree, or commit object
types.  I'm fairly sure somebody else has written something like
git-show before, I just couldn't find it.  I'd imagine it's pretty
useful standalone without vim, too.

If you :set foldmethod=marker in vim, you can pass the -f
flag to git-show and it'll enclose the output with the the default
vim fold markers: {{{  }}}

This is the line I've added to my .vimrc:

	map ,G yaw:.!git-show -f <c-r>" <CR>

And here is git-show in all it's glory:
---

#!/bin/sh

while : ; do
	case "$1" in
	-f|--fold-marker)
		fold_marker=1
		;;
	*)
		if [ -z "$sha1sum" ]; then
			sha1sum="$1"
		fi
		break
		;;
	esac
	shift
done

type=`git-cat-file -t $sha1sum`

if [ -n "$fold_marker" ]; then
	echo "$type($1) {{{"
fi

case "$type" in
	tree)
		git-ls-tree -r $1
		;;
	blob)
		git-cat-file blob $1
		;;
	commit)
		git-cat-file commit $1
		echo ''
		git-whatchanged --max-count=1 -C -p -r $1
		;;
esac

if [ -n "$fold_marker" ]; then
	echo '}}}'
fi

-- 
Eric Wong
-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

