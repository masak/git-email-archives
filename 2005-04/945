X-From-Line: git-owner@vger.kernel.org  Wed Apr 20 05:20:46 2005
Return-Path: <git-owner@vger.kernel.org>
X-Original-To: tkil@scrye.com
Delivered-To: tkil@scrye.com
Received: from vger.kernel.org (vger.kernel.org [12.107.209.244])
	by mail.scrye.com (Postfix) with ESMTP id D63E525CFDB
	for <tkil@scrye.com>; Wed, 20 Apr 2005 05:20:45 -0600 (MDT)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
	id S261366AbVDTLUR (ORCPT <rfc822;tkil@scrye.com>);
	Wed, 20 Apr 2005 07:20:17 -0400
Received: (majordomo@vger.kernel.org) by vger.kernel.org id S261501AbVDTLUR
	(ORCPT <rfc822;git-outgoing>); Wed, 20 Apr 2005 07:20:17 -0400
Received: from user-10mt71s.cable.mindspring.com ([65.110.156.60]:59968 "EHLO
	localhost") by vger.kernel.org with ESMTP id S261366AbVDTLUD (ORCPT
	<rfc822;git@vger.kernel.org>); Wed, 20 Apr 2005 07:20:03 -0400
Received: from droundy by localhost with local (Exim 4.50)
	id 1DODAS-0000Zi-9G; Wed, 20 Apr 2005 07:14:52 -0400
Date:	Wed, 20 Apr 2005 07:14:52 -0400
From: David Roundy <droundy@abridgegame.org>
To: Linus Torvalds <torvalds@osdl.org>
Cc: Tupshin Harper <tupshin@tupshin.com>, darcs-devel@darcs.net,
	Git Mailing List <git@vger.kernel.org>
Subject: Re: [darcs-devel] Darcs and git: plan of action
X-Gnus-Mail-Source: directory:~/.incoming-mail
Message-ID: <20050420111446.GE29945@abridgegame.org>
Mail-Followup-To: Linus Torvalds <torvalds@osdl.org>,
	Tupshin Harper <tupshin@tupshin.com>, darcs-devel@darcs.net,
	Git Mailing List <git@vger.kernel.org>
References: <7ivf6lm594.fsf@lanthane.pps.jussieu.fr> <20050418122011.GA13769@abridgegame.org> <Pine.LNX.4.58.0504180832330.7211@ppc970.osdl.org> <20050419104252.GA28269@abridgegame.org> <Pine.LNX.4.58.0504190749030.19286@ppc970.osdl.org> <426532D5.3040306@tupshin.com> <Pine.LNX.4.58.0504190943060.19286@ppc970.osdl.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <Pine.LNX.4.58.0504190943060.19286@ppc970.osdl.org>
User-Agent: Mutt/1.5.6+20040907i
Sender: git-owner@vger.kernel.org
Precedence: bulk
X-Mailing-List:	git@vger.kernel.org
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on brand.scrye.com
X-Spam-Level: 
X-Spam-Status: No, score=-2.6 required=5.0 tests=AWL,BAYES_00 autolearn=ham 
	version=3.0.2
Lines: 75
Xref: brand.scrye.com linux.git:945

On Tue, Apr 19, 2005 at 09:49:12AM -0700, Linus Torvalds wrote:
> On Tue, 19 Apr 2005, Tupshin Harper wrote:
> > I suspect that any use of wildcards in a new format would be impossible
> > for darcs since it wouldn't allow darcs to construct dependencies,
> > though I'll leave it to david to respond to that.
> 
> Note that git _does_ very efficiently (and I mean _very_) expose the 
> changed files.
> 
> So if this kind of darcs patch is always the same pattern just repeated
> over <n> files, then you really don't need to even list the files at all.
> Git gives you a very efficient file listing by just doing a "diff-tree"
> (which does not diff the _contents_ - it really just gives you a pretty
> much zero-cost "which files changed" listing).

The catch is that it's possible to have a darcs patch that doesn't change
any files, or that affects files without changing them.  If I rename
function foo to bar, I might want to do

darcs replace foo bar *.c

which would issue a replace on all files, which means that when this patch
is merged with any patches that add occurrences of foo in a file, that will
get modified to a bar, regardless of whether there was previously an
occurrence of foo in that file.

I think we might (when working with git--it would be problematic within
darcs straight) be able to work out some sort of a wildcard replace
scheme, so it could be something like

replace foo bar in: mm/*.c

The regexp bit could be left out, if we restrict the definition of "tokens"
in token replaces--which probably isn't a troublesome limitation.  By
default darcs uses two tokenizing schemes, one which allows "." in tokens
(usually relevant in Makefiles), and one which doesn't, and basically
matches C identifiers.  We could allow for both of these if we had a second
option:

replace filename foo.h bar.h in: mm/*.c

We'd just need to expand the wildcards when translating from the git
repository into darcs patches.

> So that combination would be 100% reliable _if_ you always split up darcs 
> patches to "common elements". 
> 
> And note that there does not have to be a 1:1 relationship between a git
> commit and a darcs patch. For example, say that you have a darcs patch
> that does a combination of "change token x to token y in 100 files" and
> "rename file a into b". I don't know if you do those kind of "combination 
> patches" at all, but if you do, why not just split them up into two? That 
> way the list of files changed _does_ 100% determine the list of files for 
> the token exchange.

We do allow multiple sorts of changes (in darcs terminology, multiple
"primitive patches") in a single patch.

One *could* have multiple git commits for a single darcs patch, but that
seems ugly and I'd rather avoid it.  In my view, revision control system is
more about communication than history (which is why by default, darcs
doesn't "do" history), and grouping changes together is how we express
which changes "go together".  Of course, we could still have a grouping at
a higher level, so that a single "changeset" could consist of multiple git
commits (for example by recognizing that identical commit logs mean that
it's a single change), but that adds a layer of complexity that I'd like to
avoid if possible.
-- 
David Roundy
http://www.darcs.net
-
To unsubscribe from this list: send the line "unsubscribe git" in
the body of a message to majordomo@vger.kernel.org
More majordomo info at  http://vger.kernel.org/majordomo-info.html

